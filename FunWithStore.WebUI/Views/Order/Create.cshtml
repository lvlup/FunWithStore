@model FunWithStore.Domain.Entities.Order

@{
    ViewBag.Title = "Создание заказа";
}

<div class="page-header text-center">
    <h2>Новый заказ</h2>
</div>

@using (Html.BeginForm("Create", "Order", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Number)
    @Html.HiddenFor(model => model.CustomerId)
    @Html.HiddenFor(model => model.Date)
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(p => p.Description, new { @class = "form-control", tabindex = 1 })
            @Html.ValidationMessageFor(model => model.Description, null, new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Amount, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(p => p.Amount, new { @class = "form-control", tabindex = 2 })
            @Html.ValidationMessageFor(model => model.Amount, null, new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button type="submit" class="btn btn-primary btn-lg">Сохранить</button>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Назад к списку заказов", "Index",new { customerId = @Model.CustomerId},null)
</div>



